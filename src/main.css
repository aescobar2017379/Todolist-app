*,
*::after,
*::before {
  box-sizing:border-box;
  margin: 20;
  padding: 10;
}

input,
label {
  font: inherit;
}

:root {
  --_hue: 245;
  --_size: 1.8rem;
  --_radius: 0.2em;
  --_tspeed_fast: 180ms;
  --_tspeed_slow: 300ms;
  --_ttype_squish: cubic-bezier(0.86, -0.1, 0.27, 1.15);

  --bg--light: var(--_hue) 30% 94%;
  --txt--light: var(--_hue) 40% 5%;
  --accent--light: var(--_hue) 55% 50%;
  --accent1--light: 10 80% 60%;
  --muted--light: var(--_hue) 30% 99%;
}

:root[color-scheme="light"] {
  --bg: var(--bg--light);
  --txt: var(--txt--light);
  --accent: var(--accent--light);
  --accent1: var(--accent1--light);
  --muted: var(--muted--light);
  color-scheme: light;
}

body {
  min-height: 100vh;
  display: grid;
  justify-items: center;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  color: hsl(var(--txt));
    background: rgb(70, 77, 82);
    background: linear-gradient(135deg, rgba(82, 93, 94, 0.694) 23%, rgb(56, 83, 76) 100%); 
}

.container {
  margin: 4vmax max(calc((100vw - 70rem) / 2), 1.5rem) 6em;
  display: grid;
  gap: clamp(2rem, 1vmax, 8rem);
  text-align: center;
}

.btn :where(svg, img, span) {
  pointer-events: none;
}

.todo {
  display: flex;
  gap: 0.5em;
  font-size: var(--_size);
  text-align: left;
}

.wrapper {
  flex: 1 1 100%;
  position: relative;
  display: grid;
  gap: 0.2em;
}

.label {
  text-transform:lowercase;
  font-size: 0.7em;
  pointer-events: none;
  letter-spacing: 0.5em;
  margin-inline: 0.35em;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  padding: 0.1em 0.35em;
  background-color: hsl(var(--muted));
  transition: transform var(--_tspeed_fast) var(--_ttype_squish),
    background-color var(--_tspeed_fast) var(--_ttype_squish);
}

.input {
  border: none;
  border-radius: var(--_radius);
  padding: 0.35em 0.55em;
  width: 100%;
  background-color: hsl(var(--muted));
  caret-color: hsl(var(--accent));
  box-shadow: 0 0 0 -0.1em hsl(var(--bg)), 0 0 0 -0.2em hsl(var(--accent) / 0.8);
  transition: box-shadow var(--_tspeed_fast) var(--_ttype_squish);
}

.input:focus {
  outline: none;
  box-shadow: 0 0 0 0.2em hsl(var(--bg)), 0 0 0 0.4em hsl(var(--accent) / 0.8);
}

.input:focus~.label,
.input:not(:placeholder-shown)~.label {
  transform: translate3d(0, -3em, 0);
  background-color: hsl(var(--bg));
  color: hsl(var(--accent) / 0.8);
}

.input::placeholder {
  opacity: 0;
}

[role="dialog"] {
  position: fixed;
  z-index: 100;
  inset: 0;
  padding-inline: 2vmax;
  display: grid;
  place-items: center;
  background-color: hsl(var(--bg) / 0.7);
}

[role="dialog"] .todo {
  max-width: 40ch;
  padding: 2em 1.3em 1.3em;
  background-color: hsl(var(--bg));
  border-radius: var(--_radius);
  border: 0.1em solid hsl(var(--accent) / 0.3);
  box-shadow: 0 -1em 3em hsl(var(--muted)), 0 1em 3em hsl(var(--accent) / 0.2);
}